package edu.utdallas.hlt.medbase.snomed;

import com.google.common.collect.BiMap;
import com.google.common.collect.EnumHashBiMap;

public enum SNOMEDRelationshipType {
  HAS_SPECIMEN(116686009),
  RECIPIENT_CATEGORY(370131001),
  PROCEDURE_SITE(363704007),
  ROUTE_OF_ADMINISTRATION(410675002),
  PART_OF(123005000),
  METHOD(260686004),
  WAS_A(159083000),
  SPECIMEN_SUBSTANCE(370133003),
  ASSOCIATED_PROCEDURE(363589002),
  HAS_INTERPRETATION(363713009),
  ASSOCIATED_MORPHOLOGY(116676008),
  IS_A(116680003),
  HAS_DEFINITIONAL_MANIFESTATION(363705008),
  SEVERITY(246112005),
  DUE_TO(42752001),
  CAUSATIVE_AGENT(246075003),
  PROCEDURE_CONTEXT(408730004),
  DIRECT_MORPHOLOGY(363700003),
  FINDING_INFORMER(419066007),
  USING_DEVICE(424226004),
  HAS_DOSE_FORM(411116001),
  AFTER(255234002),
  FINDING_SITE(363698007),
  PROCEDURE_DEVICE(405815000),
  USING_ACCESS_DEVICE(425391005),
  SPECIMEN_SOURCE_TOPOGRAPHY(118169006),
  SPECIMEN_SOURCE_MORPHOLOGY(118168003),
  PROCEDURE_SITE_DIRECT(405813007),
  MEASUREMENT_METHOD(370129005),
  HAS_FOCUS(363702006),
  EPISODICITY(246456000),
  SAME_AS(168666000),
  LATERALITY(272741003),
  SPECIMEN_SOURCE_IDENTITY(118170007),
  USING_SUBSTANCE(424361007),
  SUBJECT_RELATIONSHIP_CONTEXT(408732007),
  OCCURRENCE(246454002),
  SCALE_TYPE(370132008),
  HAS_INTENT(363703001),
  ASSOCIATED_WITH(47429007),
  PRIORITY(260870009),
  INTERPRETS(363714003),
  INDIRECT_DEVICE(363710007),
  DIRECT_DEVICE(363699004),
  MOVED_TO(370125004),
  INDIRECT_MORPHOLOGY(363709002),
  TEMPORAL_CONTEXT(408731000),
  SPECIMEN_PROCEDURE(118171006),
  FINDING_METHOD(418775008),
  REPLACED_BY(370124000),
  SURGICAL_APPROACH(424876005),
  MAY_BE_A(149016008),
  COMPONENT(246093002),
  CLINICAL_COURSE(263502005),
  PROPERTY(370130000),
  PROCEDURE_MORPHOLOGY(405816004),
  ASSOCIATED_FINDING(246090004),
  USING_ENERGY(424244007),
  DIRECT_SUBSTANCE(363701004),
  REVISION_STATUS(246513007),
  ACCESS(260507000),
  HAS_ACTIVE_INGREDIENT(127489000),
  PROCEDURE_SITE_INDIRECT(405814001),
  FINDING_CONTEXT(408729009),
  PATHOLOGICAL_PROCESS(370135005);
  private final long value;

  private static final BiMap<SNOMEDRelationshipType, Long> typeToId = EnumHashBiMap.create(SNOMEDRelationshipType.class);
  static {
    for (SNOMEDRelationshipType type : values()){
      typeToId.put(type, type.value);
    }
  }

  public static SNOMEDRelationshipType forValue(long value) {
    return typeToId.inverse().get(value);
  }

  private SNOMEDRelationshipType(final long value) {
    this.value = value;
  }

  public long getValue() {
    return value;
  }
}
